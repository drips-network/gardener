# Gardener Environment Variables Example
# Copy this file to .env and fill in your values

# Environment Configuration
ENVIRONMENT=development
DEBUG=true

# Security Configuration
# Minimum length is enforced (>= 32 chars)
HMAC_SHARED_SECRET=dev_only_change_me_dev_only_change_me_123456
HMAC_HASH_NAME=sha256
TOKEN_EXPIRY_SECONDS=300

# Database Configuration (Local Development)
POSTGRES_USER=gardener
POSTGRES_PASSWORD=dev_only_change_me
POSTGRES_DB=gardener_db
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Database Configuration (Railway Production)
# Railway automatically provides these environment variables:
# DATABASE_URL=postgresql://user:password@host:port/database
# PGDATABASE=railway
# PGHOST=containers-us-west-xxx.railway.app
# PGPASSWORD=your-password
# PGPORT=5432
# PGUSER=postgres

# Redis Configuration (Local Development)
REDIS_HOST=redis
REDIS_PORT=6379

# Redis Configuration (Railway Production)
# Railway automatically provides:
# REDIS_URL=redis://default:password@containers-us-west-xxx.railway.app:6379
# (use rediss:// if provider requires TLS)

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
RATE_LIMIT_PER_MINUTE=10
MAX_REQUEST_SIZE=50000000
ALLOWED_HOSTS=*
# Example with multiple hosts (production):
# ALLOWED_HOSTS=example.com,api.example.com

# Worker Configuration
MAX_ANALYSIS_DURATION=3600
MAX_REPO_SIZE_MB=500
CLONE_TIMEOUT=300
SUBPROCESS_TIMEOUT=3600

# Service Version (optional override)
# By default, the API reads the installed package version. You can override
# with SERVICE_VERSION if needed (not recommended for normal ops)
# SERVICE_VERSION=
GARDENER_GIT_COMMIT=unknown

# Database migrations management
# By default, the API runs Alembic on startup (RUN_DB_MIGRATIONS=1)
# If managing migrations externally (e.g., in docker-compose), set:
# RUN_DB_MIGRATIONS=0

# Job Runtime Prediction Configuration (optional)
# Set these if you want the API/Worker to estimate analysis durations
# DURATION_MODEL_JSON should be a single-line JSON blob produced by
# services/scripts/fit_duration_model.py (e.g., using `jq -c`)
# GITHUB_TOKEN should be a GitHub Personal Access Token (classic or fine-grained)
# with public_repo access (private repo access if you plan to analyze private repos)
#DURATION_MODEL_JSON=
#GITHUB_TOKEN=

# MinIO/S3 Object Storage
S3_ENDPOINT_URL=https://<minio-endpoint>
S3_ACCESS_KEY_ID=<minio-access-key>
S3_SECRET_ACCESS_KEY=<minio-secret-key>
S3_REGION=eu-west-1
S3_BUCKET=gardener-artifacts
S3_FORCE_PATH_STYLE=true
S3_ARTIFACTS_PREFIX=gardener/v1
